version: '3.8'

services:
  
  # expense-shared-modules:
  #   container_name: expense-shared-modules
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  
  expense-nginx:
    container_name: expense-nginx
    image: nginx:alpine
    volumes:
      - ./dev-tools/local-proxy/secured.conf:/etc/nginx/conf.d/default.conf
      - ./apps/frontend/public:/usr/share/nginx/html
      - ./credentials/ssl-certs:/etc/nginx/ssl
    ports:
      - 80:80
      - 443:443
    depends_on:
      - expense-backend
      - expense-frontend

  expense-postgres:
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5433:5433'
    volumes: 
      - ./.data/postgres:/var/lib/postgresql/data

  expense-mongo:
    container_name: expense-mongo
    image: bitnami/mongodb:5.0.13
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_ADVERTISED_HOSTNAME: expense-mongo
      MONGODB_ROOT_USER: ${MONGO_USER:-mongodb}
      MONGODB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
      MONGODB_REPLICA_SET_KEY: replicasetkey123
    volumes:
      - ./.data/mongodb:/bitnami/mongodb
    ports:
      - 27017:27017
  
  expense-backend:
    container_name: expense-backend
    build:
      dockerfile: Dockerfile
      context: /
      # Only will build development stage from our dockerfile
      target: development
      # target: production
    volumes:
      - ./
      - backend_node_modules:/expense/apps/backend/node_modules
      - ./.data/backend:/expense/data
      - ./credentials:/usr/credentials
    # Run in Debug Mode: npm run start:debug --> Don't forget to start your vscode debugger!
    # Run in dev Mode: npm run start:dev
    # command: npm run start:debug
    # command: npm start
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.75'
    #       memory: 1000M
    #     reservations:
    #       cpus: '0.25'
    #       memory: 700M
    depends_on: 
      - expense-postgres
      # - expense-mongo
    environment:
      NODE_ENV: development
      NODE_PORT: 3000
      GLOBAL_PRESET: v1/api
      # POSTGRES_HOST: database-1.ct2yskm0gug3.ap-south-1.rds.amazonaws.com
      POSTGRES_HOST: expense-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      # POSTGRES_PASSWORD: ankushhkinfomaticae
      POSTGRES_DATABASE: test-hk
      POSTGRES_SSH: true
      # POSTGRES_SSH: false
      DATA_DIR: /expense/data
      ENCRYPTION_KEY: YourSecretKey
      ENCRYPTION_ALGORITHM: aes-256-cbc
      SWAGGER_ENABLED: false
      AWS_S3_ACCESS_KEY_ID: AKIAQTGZXUQZTIYMIO4F
      AWS_S3_SECRET_ACCESS_KEY: Tmx42nly8l7l94VYJC9E+bnAt+ITCsA/gSN8m9/e
      AWS_S3_REGION: ap-south-1
      AWS_BUCKET_NAME: expense-bucket


    ports:
      - 8881:3000
      - 9229:9229 # debugging port
  

  expense-frontend:
    container_name: expense-frontend
    build:
      dockerfile: DockerFile
      context: apps/frontend
      target: development
    volumes:
      - frontend_node_modules:/usr/src/app/node_modules
      - ./apps/frontend/ui:/usr/src/app/ui
    environment:
      NODE_ENV: development
      NODE_PORT: 3000

    ports:
      - 8880:3000
  
